/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uaspbo;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Careen Emilza
 */
public class DataMhs extends javax.swing.JFrame {

    Connection conn;
    Statement stmt;
    PreparedStatement pstmt = null;

    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/UasPbo";
    String user = "postgres";
    String password = "189066";
    InputStreamReader inputStreamReader = new InputStreamReader(System.in);
    BufferedReader input = new BufferedReader(inputStreamReader);

    /**
     * Creates new form DataMhs
     */
    public DataMhs() {
        initComponents();
        tampil();
    }

    public void tampil() {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("UasPboPU");
        EntityManager em = emf.createEntityManager();

        try {
            Query q = em.createNamedQuery("Mahasiswa.findAll");
            List<Mahasiswa> hasil = q.getResultList();

            DefaultTableModel tbmk = new DefaultTableModel(new String[]{"Nim", "Nama", "Alamat", "Asal SMA", "Nama Orang Tua"}, 0);
            for (Mahasiswa data : hasil) {
                Object[] baris = {data.getNim(), data.getNama(), data.getAlamat(), data.getAsalSma(), data.getNamaOrtu()};
                tbmk.addRow(baris);
            }
            tblDTM.setModel(tbmk);
        } finally {
            em.close();
            emf.close();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMHS = new javax.swing.JPanel();
        lblDTM = new javax.swing.JLabel();
        lblNIM = new javax.swing.JLabel();
        lblNM = new javax.swing.JLabel();
        lblAL = new javax.swing.JLabel();
        lblAS = new javax.swing.JLabel();
        lblNMO = new javax.swing.JLabel();
        txtNIM = new javax.swing.JTextField();
        txtNM = new javax.swing.JTextField();
        txtAL = new javax.swing.JTextField();
        txtAS = new javax.swing.JTextField();
        txtNMO = new javax.swing.JTextField();
        btnTAM = new javax.swing.JButton();
        btnUP = new javax.swing.JButton();
        btnDEL = new javax.swing.JButton();
        btnCT = new javax.swing.JButton();
        btnUD = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDTM = new javax.swing.JTable();
        btnLGT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlMHS.setBackground(new java.awt.Color(153, 153, 153));

        lblDTM.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblDTM.setText("DATA MAHASISWA");

        lblNIM.setText("NIM");

        lblNM.setText("NAMA");

        lblAL.setText("ALAMAT");

        lblAS.setText("ASAL SMA");

        lblNMO.setText("NAMA ORANG TUA");

        txtNM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNMActionPerformed(evt);
            }
        });

        txtNMO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNMOActionPerformed(evt);
            }
        });

        btnTAM.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTAM.setText("TAMBAH");
        btnTAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTAMActionPerformed(evt);
            }
        });

        btnUP.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUP.setText("UPDATE");
        btnUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUPActionPerformed(evt);
            }
        });

        btnDEL.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDEL.setText("DELETE");
        btnDEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDELActionPerformed(evt);
            }
        });

        btnCT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCT.setText("CETAK");
        btnCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCTActionPerformed(evt);
            }
        });

        btnUD.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUD.setText("UPLOAD");
        btnUD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUDActionPerformed(evt);
            }
        });

        tblDTM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDTM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDTMMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDTM);

        btnLGT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLGT.setText("LOGOUT");
        btnLGT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLGTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMHSLayout = new javax.swing.GroupLayout(pnlMHS);
        pnlMHS.setLayout(pnlMHSLayout);
        pnlMHSLayout.setHorizontalGroup(
            pnlMHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMHSLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(pnlMHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNIM)
                    .addComponent(lblNM)
                    .addComponent(lblAL)
                    .addComponent(lblAS)
                    .addComponent(lblNMO))
                .addGap(34, 34, 34)
                .addGroup(pnlMHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNIM, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addComponent(txtNM)
                    .addComponent(txtAL)
                    .addComponent(txtAS)
                    .addComponent(txtNMO))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlMHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTAM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34))
            .addGroup(pnlMHSLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlMHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLGT)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMHSLayout.createSequentialGroup()
                .addContainerGap(244, Short.MAX_VALUE)
                .addComponent(lblDTM)
                .addGap(215, 215, 215))
        );
        pnlMHSLayout.setVerticalGroup(
            pnlMHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMHSLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblDTM)
                .addGap(31, 31, 31)
                .addGroup(pnlMHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNIM)
                    .addGroup(pnlMHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTAM)))
                .addGap(18, 18, 18)
                .addGroup(pnlMHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNM)
                    .addComponent(txtNM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUP))
                .addGap(19, 19, 19)
                .addGroup(pnlMHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAL)
                    .addComponent(txtAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDEL))
                .addGap(18, 18, 18)
                .addGroup(pnlMHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAS)
                    .addComponent(txtAS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCT))
                .addGap(17, 17, 17)
                .addGroup(pnlMHSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNMO)
                    .addComponent(txtNMO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUD))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLGT)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMHS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMHS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNMActionPerformed

    private void txtNMOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNMOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNMOActionPerformed

    private void btnDELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDELActionPerformed
        if (txtNIM.getText().equals("") || txtNM.getText().equals("") || txtAL.getText().equals("") || txtAS.getText().equals("") || txtNMO.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Harap isi semua data.");
        } else {
            int nim;

            try {
                nim = Integer.parseInt(txtNIM.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "NIM harus berupa angka.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("UasPboPU");
            EntityManager em = emf.createEntityManager();

            int jawab = JOptionPane.showConfirmDialog(null, "Apakah anda ingin menghapus data dengan kode : ",
                    "Konfirmasi Hapus.", JOptionPane.YES_NO_OPTION);
            switch (jawab) {
                case JOptionPane.YES_OPTION -> {
                    em.getTransaction().begin();

                    Mahasiswa m = em.find(Mahasiswa.class, nim);
                    if (m == null) {
                        JOptionPane.showMessageDialog(null, "Data tidak ditemukan.");
                    } else {
                        em.remove(m);

                        em.getTransaction().commit();
                        JOptionPane.showMessageDialog(null, "Data berhasil didelete.");
                        em.close();
                        clear();
                        txtNIM.setEditable(true);
                    }
                }
                case JOptionPane.NO_OPTION ->
                    JOptionPane.showMessageDialog(this, "Penghapusan dibatalkan.");
            }
            tampil();
        }
    }//GEN-LAST:event_btnDELActionPerformed

    private void btnTAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTAMActionPerformed
        if (txtNIM.getText().equals("") || txtNM.getText().equals("") || txtAL.getText().equals("") || txtAS.getText().equals("") || txtNMO.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Harap isi semua data.");
        } else {
            String nama, alamat, asal_sma, nama_ortu;
            nama = txtNM.getText();
            alamat = txtAL.getText();
            asal_sma = txtAS.getText();
            nama_ortu = txtNMO.getText();
            int nim;

            try {
                nim = Integer.parseInt(txtNIM.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "NIM harus berupa angka.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("UasPboPU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

            Mahasiswa m = new Mahasiswa();
            m.setNim(nim);
            m.setNama(nama);
            m.setAlamat(alamat);
            m.setAsalSma(asal_sma);
            m.setNamaOrtu(nama_ortu);

            em.persist(m);

            em.getTransaction().commit();
            JOptionPane.showMessageDialog(null, "Data berhasil diinput.");

            clear();
            tampil();

            em.close();
            emf.close();
        }
    }//GEN-LAST:event_btnTAMActionPerformed

    private void btnUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUPActionPerformed
        if (txtNIM.getText().equals("") || txtNM.getText().equals("") || txtAL.getText().equals("") || txtAS.getText().equals("") || txtNMO.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Harap isi semua data.");
        } else {
            String nama, alamat, asal_sma, nama_ortu;
            nama = txtNM.getText();
            alamat = txtAL.getText();
            asal_sma = txtAS.getText();
            nama_ortu = txtNMO.getText();
            int nim;

            try {
                nim = Integer.parseInt(txtNIM.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "NIM harus berupa angka.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("UasPboPU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

            Mahasiswa m = em.find(Mahasiswa.class, nim);
            if (m == null) {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
            } else {
                m.setNim(nim);
                m.setNama(nama);
                m.setAlamat(alamat);
                m.setAsalSma(asal_sma);
                m.setNamaOrtu(nama_ortu);

                em.getTransaction().commit();
                JOptionPane.showMessageDialog(null, "Data berhasil diupdate");

                em.close();
                emf.close();
                clear();
                txtNIM.setEditable(true);
            }
        }
        tampil();
    }//GEN-LAST:event_btnUPActionPerformed

    private void btnCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCTActionPerformed
        JasperReport reports;

        try {
            if (conn == null || conn.isClosed()) {
                // Mencoba untuk membuka koneksi baru
                try {
                    conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/UasPbo", "postgres", "189066");
                    System.out.println("Koneksi berhasil dibuka.");
                } catch (SQLException e) {
                    System.err.println("Gagal membuka koneksi: " + e.getMessage());
                    return; // Keluar dari metode jika koneksi gagal
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(DataMhs.class.getName()).log(Level.SEVERE, null, ex);
        }

        String path = ".\\src\\uaspbo\\ReportMhs.jasper";
        try {
            reports = (JasperReport) JRLoader.loadObjectFromFile(path);
            JasperPrint jprint = JasperFillManager.fillReport(path, null, conn);
            JasperViewer jviewer = new JasperViewer(jprint, false);
            jviewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            jviewer.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(DataMhs.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCTActionPerformed

    private void btnUDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUDActionPerformed
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        int returnValue = jfc.showOpenDialog(null);
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("UasPboPU");
        EntityManager em = emf.createEntityManager();
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File pilihanfile = jfc.getSelectedFile();
            System.out.println("File yang dipilih : " + pilihanfile.getAbsolutePath());

            try (BufferedReader br = new BufferedReader(new FileReader(pilihanfile))) {
                Class.forName(driver);
                conn = DriverManager.getConnection(koneksi, user, password);
                String baris;
                String pemisah = ",";

                while ((baris = br.readLine()) != null) {
                    String[] dataMhs = baris.split(pemisah);
                    String nama = dataMhs[1];
                    String alamat = dataMhs[2];
                    String asal_sma = dataMhs[3];
                    String nama_ortu = dataMhs[4];
                    int nim = 0;
                    try {
                        nim = Integer.parseInt(dataMhs[0]);
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "Data 'sks' atau 'semester ajar' tidak valid: " + baris);
                        continue; // Skip baris yang salah format
                    }
                    if (!nama.isEmpty() && !alamat.isEmpty() && !asal_sma.isEmpty() && !nama_ortu.isEmpty()) {
                        em.getTransaction().begin();

                        Mahasiswa m = new Mahasiswa();
                        m.setNim(nim);
                        m.setNama(nama);
                        m.setAlamat(alamat);
                        m.setAsalSma(asal_sma);
                        m.setNamaOrtu(nama_ortu);

                        em.persist(m);

                        em.getTransaction().commit();
                        JOptionPane.showMessageDialog(null, "Sukses diinput");
                        tampil();
                    } else {
                        JOptionPane.showMessageDialog(null, "Gagal diinput");
                    }
                }
                em.close();
                emf.close();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Gagal diinput");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Gagal diinput");
            } catch (ClassNotFoundException | SQLException ex) {
            }
        }
    }//GEN-LAST:event_btnUDActionPerformed

    private void tblDTMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDTMMouseClicked
        int row = tblDTM.getSelectedRow();
        txtNIM.setText(tblDTM.getValueAt(row, 0).toString());
        txtNM.setText(tblDTM.getValueAt(row, 1).toString());
        txtAL.setText(tblDTM.getValueAt(row, 2).toString());
        txtAS.setText(tblDTM.getValueAt(row, 3).toString());
        txtNMO.setText(tblDTM.getValueAt(row, 4).toString());
        txtNIM.setEditable(false);
    }//GEN-LAST:event_tblDTMMouseClicked

    private void btnLGTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLGTActionPerformed
        LoginFrame yes = new LoginFrame();
        yes.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLGTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataMhs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataMhs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataMhs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataMhs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataMhs().setVisible(true);
            }
        });
    }

    public void clear() {
        txtNIM.setText("");
        txtNM.setText("");
        txtAL.setText("");
        txtAS.setText("");
        txtNMO.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCT;
    private javax.swing.JButton btnDEL;
    private javax.swing.JButton btnLGT;
    private javax.swing.JButton btnTAM;
    private javax.swing.JButton btnUD;
    private javax.swing.JButton btnUP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAL;
    private javax.swing.JLabel lblAS;
    private javax.swing.JLabel lblDTM;
    private javax.swing.JLabel lblNIM;
    private javax.swing.JLabel lblNM;
    private javax.swing.JLabel lblNMO;
    private javax.swing.JPanel pnlMHS;
    private javax.swing.JTable tblDTM;
    private javax.swing.JTextField txtAL;
    private javax.swing.JTextField txtAS;
    private javax.swing.JTextField txtNIM;
    private javax.swing.JTextField txtNM;
    private javax.swing.JTextField txtNMO;
    // End of variables declaration//GEN-END:variables
}
